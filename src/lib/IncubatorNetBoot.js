/*
  chickenEggBoot.js V. 0.3.0
*/

"use strict";


class chickenNetBoot extends EggNetBoot {
  constructor(homeDir = "/home/artisan/fabricator", distroName = "Fabricator") {
    super(homeDir, distroName);

    this._isoDir = homeDir + "/iso";

    console.log("==========================================");
    console.log("constructor");
    console.log("==========================================");
  }



pxelinux() {
  execAndShow(`mkdir -p ${this._tftpRoot}/pxelinux.cfg`);
  let file = `${this._tftpRoot}/pxelinux.cfg/default`;
  let text = `# Generated by eggs
DEFAULT vesamenu.c32
TIMEOUT 600
ONTIMEOUT BootLocal
PROMPT 0
KBDMAP it.kbd
DISPLAY display.txt
SAY Uso la tastiera e locale per italiano.
MENU TITLE Giant-Turle
MENU BACKGROUND wallpaper.png

LABEL ${this._distroName}
MENU LABEL ${this._distroName}
KERNEL ${this._distroName}/vmlinuz-${this._kernelVer}
APPEND root=/dev/nfs initrd=${this._distroName}/initrd.img-${this
    ._kernelVer} nfsroot=${this._netBootServer}:${this._fsDir} ip=dhcp rw
IPAPPEND 3
TEXT HELP
Distribuzione con boot remoto ${this._distroName}
ENDTEXT
# parametro per eth0 net.ifnames=0
#LABEL ========================================================================
#LABEL Avvio da immagini ISO con memdisk - Selezionare immagine desiderata
#LABEL ========================================================================
#LABEL WinXP over HTTP
#	MENU LABEL WinXP over HTTP
#		LINUX /memdisk
#		INITRD /iso/WinXP.iso
#		APPEND iso

LABEL ========================================================================
LABEL Boot locale
localboot 0
TEXT HELP
Esegue il boot dal disco locale
ENDTEXT

include common.cfg`;

  writeAndShow(file, text);

  shell.exec(`ln /usr/lib/PXELINUX/pxelinux.0  ${this._tftpRoot}/pxelinux.0`);
  shell.exec(
    `ln /usr/lib/PXELINUX/lpxelinux.0  ${this._tftpRoot}/lpxelinux.0`
  );
  shell.exec(`ln src/assets/wallpaper.png ${this._tftpRoot}/wallpaper.png`);

  shell.exec(
    `ln /usr/lib/syslinux/modules/bios/vesamenu.c32 ${this
      ._tftpRoot}/vesamenu.c32`
  );
  shell.exec(
    `ln /usr/lib/syslinux/modules/bios/ldlinux.c32 ${this
      ._tftpRoot}/ldlinux.c32`
  );
  shell.exec(
    `ln /usr/lib/syslinux/modules/bios/libcom32.c32 ${this
      ._tftpRoot}/libcom32.c32`
  );
  shell.exec(
    `ln /usr/lib/syslinux/modules/bios/libutil.c32 ${this
      ._tftpRoot}/libutil.c32`
  );
  shell.exec(`ln /usr/lib/syslinux/memdisk ${this._tftpRoot}/memdisk`);
}

exports() {
  let file = `/etc/exports`;
  let text = `# Generated by Eggs
${this._fsDir} ${this._net}/${this
    ._netNetmask}(rw,no_root_squash,async,no_subtree_check)
### Attenzione NON lasciare spazi tra le opzioni ###`;

  writeAndShow(file, text);
}

dnsmasq() {
  let file = `/etc/dnsmasq.conf`;
  let text = `
interface=${this._netDeviceName}
domain=lan
dhcp-range=${this._net}, proxy, ${this._netNetmask}
pxe-service=x86PC, "Eggs and penguins...", pxelinux
enable-tftp
port=0
tftp-root=${this._tftpRoot}
# IF dhcp-match=set:ipxe,175 THEN
dhcp-match=set:ipxe,175 # iPXE sends a 175 option.
      dhcp-boot=tag:!ipxe,undionly.kpxe
#ELSE
      dhcp-boot=http://${this._netBootServer}/lpxelinux.0
# ENDIF`;

  writeAndShow(file, text);
}
}
