#!/bin/bash
#
#
#  fabrica-installer is an alternative installer for remastered livecd/dvd's
#
#  Created by Piero Proietti
#  Copyright 2012 Under the GNU GPL2 License
#  It work with Debian Jessie and PVE Proxmox 4.0
#  It is compatible with
#  Depends on:
#  - yad
#  - systemback
#
#  Original based on refractainstaller
#
#  Copyright 2008-2015 Under the GNU GPL2 License
#
# Licence: GPL-3
# This is free software with no warrantees. Use at your own risk.
#
#
#https://packages.debian.org/stretch/amd64/yad/download


###########
# Funzioni
###########
progressbar() {
    tail -f /usr/bin/fabrica-installer|yad \
    --window-icon=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_32.png \
    --image=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_256.png \
    --center \
    --always-print-result \
    --dialog-sep \
    --title="Fabrica VE - installer LVM" \
    --no-buttons \
    --progress \
    --pulsate \
    --auto-close \
    --text "$@"
}

progressbarkill() {
    killall -KILL tail
}

#
# yesNoBox()
#
yesNoBox()
{
	yad \
  --window-icon=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_32.png \
  --image=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_256.png \
  --title="Fabrica VE - installer LVM" \
	--center \
	--button=gtk-yes:0 \
	--button=gtk-no:1 \
    --text "$@"
}

#
# kindMessage()
#
kindMessage()
{
	yad  \
    --window-icon=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_32.png \
    --image=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_256.png \
    --title="Fabrica VE - installer LVM" \
		--center \
		--button=gtk-ok:0 \
		--text "$@"
}

###########
# Fine Funzioni
###########


# Impostazione delle opzioni
RINUNCIA="Rinuncia Esce"
PARTITIONPROG="gparted"
TARGETCDROM="/dev/cdrom"
LIVEMODE="DIST"
DEFAULTGROUPS="audio,cdrom,dialout,floppy,video,plugdev,sudo"

PARTDRIVE="sda"
TARGETPART="sda1"
FSTYPE="ext4"
HFSTYPE="ext4"

TARGETUSERFULLNAME="artisan"
TARGETUSER="artisan"
TARGETPASS="evoluzione"
TARGETROOTPASS="evoluzione"
TARGETHOSTNAME="eggs-ve"
TARGETDOMAIN="lan"
IPADDRESS="192.168.0.2"
IPNETMASK="255.255.255.0"
IPGATEWAY="192.168.0.1"
TARGETDNS= "192.168.0.1"

GREP="/bin/grep"

#....
# Make sure only root can run our script
if [ "$(id -u)" != "0" ]; then
   kindMessage \
   "Questo installer può essere utilizzato solo la root."
   exit 0
fi

# Controllo se esiste il device /dev/loop0
chkIsLive=$(mount|grep squashfs)
echo chkIsLive=$chkIsLive
if [ -z $chkIsLive  ]; then
	kindMessage "Sembra che tu stia utilizzando una versione installata. L'installazione sarà terminata!"
		exit 0
fi

#
yesNoBox "Attenzione: distruggerò il disco: /dev/$PARTDRIVE Siete sicuri di voler continuare?"
if [ $? != 0 ]; then
	exit 0
fi


#grub location
GRUBLOCTEST=""
while [ "$GRUBLOCTEST" = "" ]
do
	GRUBLOCTEST=`
	yad \
    --window-icon=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_32.png \
    --image=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_256.png \
    --title="Fabrica VE - installer LVM" \
    --center \
		--always-print-result \
		--dialog-sep \
        --width=600 \
        --height=400 \
        --text="Selezionate dove desiderate installare grub.\n" \
        --list --column=Posizione --column=Utilizzo \
			mbr "Installa Grub nel master boot becord del primo disco - Installazione standard" \
			root "Installa grub sulla partizione root - Per l\'utilizzo con un altro boot manager" \
			rootmbr "Partizione mbr del disco di root - Installazione su chiavetta USB"
	`
done

GRUBLOCTEST=`echo $GRUBLOCTEST | cut -d "|" -f 1`
if [ "$GRUBLOCTEST" = "root" ]; then
	GRUBLOCTEXT="partizione root di $TARGETPART (Installazione con altro boot manager)"
	GRUBLOC="root"
elif [ "$GRUBLOCTEST" = "rootmbr" ]; then
	GRUBLOCTEXT="mbr della partizione root di $TARGETPART (Installazione su chiavetta USB. Controllate se il dispositivo è EFFETTIVAMENTE una chiavetta USB)"
	GRUBLOC="rootmbr"
else
	GRUBLOCTEXT="master boot record del primo disco (Installazione normale)"
	GRUBLOC=""
fi

#Timezone setting
yad \
  --window-icon=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_32.png \
  --image=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_256.png \
  --title="Fabrica VE - installer LVM" \
  --center \
	--always-print-result \
	--dialog-sep \
	--button=Locale:0 \
	--button=UTC:1 \
   --text="Il tuo sistema è impostato sull\'orario locale o UTC?"

if [ $? = 0 ]; then
	sed -i -e 's/^UTC=.*/UTC=no/g' /etc/default/rcS
else
	sed -i -e 's/^UTC=.*/UTC=yes/g' /etc/default/rcS
fi

cat /usr/share/zoneinfo/zone.tab | awk '{print $3}' | grep "/" | sort > /tmp/remastersys.zoneinfo
for i in `cat /tmp/remastersys.zoneinfo`; do
	ZONES="$ZONES $i Timezone"
done
rm /tmp/remastersys.zoneinfo

ZONESINFO=""
while [ "$ZONESINFO" = "" ]
do
	ZONESINFO=`yad --window-icon=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_32.png \
      --image=/usr/share/icons/fabrica-installer/Factory_Yellow_2_Icon_256.png \
      --title="Fabrica VE - installer LVM" \
      --center \
			--always-print-result \
			--dialog-sep \
			--width=600 \
			--height=300 \
			--text="Seleziona la timezone per il tuo sistema" \
			--list \
				--column=Scegli \
				--column=Info \
				 $ZONES`
done

ZONESINFO=`echo $ZONESINFO | cut -d "|" -f 1`

if [ "$ZONESINFO" = "Rinuncia" ]; then
	kindMessage "La procedura sarà terminata!"
  exit 1
fi
echo "$ZONESINFO" > /etc/timezone
cp /usr/share/zoneinfo/$ZONESINFO /etc/localtime

#
# Formattazione
#
progressbar "Formattazione $TARGETPART ...\n" &
## Check for safe mode and change the grub line.
TestSafeMode=$(grep -B 0  "noapic noapm nodma nomce nolapic nomodeset radeon.modeset=0 nouveau.modeset=0" /proc/cmdline)
if [ "$TestSafeMode" != "" ]; then
 OldGrubLine=$(grep -B 0  "GRUB_CMDLINE_LINUX=" /etc/default/grub)
 sed -i -e "s/$OldGrubLine/GRUB_CMDLINE_LINUX=\"noapic noapm nodma nomce nolapic nomodeset radeon.modeset=0 nouveau.modeset=0 nosmp\"/g" /etc/default/grub
fi

#make the filesystem and mount the partition on /TARGET
if [ "`mount | grep $TARGETPART`" ]; then
	echo "Unmounting the partition we are going to use and format now"
	umount /dev/$TARGETPART
fi
mke2fs -t $FSTYPE /dev/$TARGETPART
mkdir -p /TARGET
sleep 2
progressbarkill

#
# Monto la partizione
#
progressbar "Monto la partizione TARGET...\n" &
mount /dev/$TARGETPART /TARGET -o rw
sleep 2
echo "Using tune2fs to prevent the forced checks on boot"
tune2fs -c 0 -i 0 /dev/$TARGETPART
progressbarkill

#
# Copia del sistema...
#
progressbar "
Copia dei file nel sistema di destinazione... \n
Questa operazione può durare a lungo... Attendere!\n" &
rsync -a / /TARGET --ignore-existing --exclude=/{TARGET,live,cdrom,mnt,proc,run,sys,media,.systemback} --exclude=/lib/live/mount/*
mkdir -p /TARGET/{proc,mnt,run,sys,media/cdrom,home}
progressbarkill

rm -rf /TARGET/root/.ssh
rm -rf /TARGET/etc/pve
mkdir /TARGET/etc/pve

######################################################################################################
#
#Preparazione dell'ambiente chroot per i passi di post installazione...
#
######################################################################################################
progressbar "Preparazione dell\'ambiente chroot e creazione fstab,  per i passi di post installazione...\n" &
mount -o bind /proc /TARGET/proc
mount -o bind /dev /TARGET/dev
mount -o bind /sys /TARGET/sys

rm -rf /TARGET/etc/fstab
cat > /TARGET/etc/fstab <<FOO
#
# created by fabrica-installer
#
# /etc/fstab: static file system information.
# /var/lib/vz è montato su /dev/$HOMEPART
# <file system> <mount point>   <type>  <options>       <dump>  <pass>

proc /proc proc defaults 0 0
# /dev/$TARGETPART
/dev/$TARGETPART / $FSTYPE relatime,errors=remount-ro 0 1
FOO


progressbarkill


#
# remove diverted update-initramfs as live-initramfs makes it a dummy file when booting the livecd
#
progressbar "Rimozione diversioni ...\n" &
if [ -f /TARGET/usr/sbin/update-initramfs.debian ]; then
	rm -f /TARGET/usr/sbin/update-initramfs
fi
# remove diverted update-notifier as it is disabled by live-config
if [ -f /TARGET/usr/lib/update-notifier/apt-check.debian ]; then
	rm -f /TARGET/usr/lib/update-notifier/apt-check
fi
# remove diverted anacron as it is disabled by live-config
if [ -f /TARGET/usr/sbin/anacron.debian ]; then
	rm -f /TARGET/usr/sbin/anacron
fi
# fix adept_notifier by copying the file we saved when remastersys first ran as live-initramfs removes it
if [ -f /TARGET/etc/remastersys/adept_notifier_auto.desktop ]; then
	mv /TARGET/etc/remastersys/adept_notifier_auto.desktop /TARGET/usr/share/autostart/adept_notifier_auto.desktop
fi
progressbarkill

#restore original inittab as live-initramfs changes it
cp /TARGET/usr/share/sysvinit/inittab /TARGET/etc/inittab

# Creazione /etc/hostname
echo "$TARGETHOSTNAME" > /TARGET/etc/hostname


#Creazione /etc/interfaces
echo "#" >/TARGET/etc/network/interfaces
echo "# created by fabrica-installer" >>/TARGET/etc/network/interfaces
echo "#" >>/TARGET/etc/network/interfaces
echo "# network interface settings" >>/TARGET/etc/network/interfaces
echo "auto lo" >>/TARGET/etc/network/interfaces
echo "iface lo inet loopback" >>/TARGET/etc/network/interfaces
echo "" >>/TARGET/etc/network/interfaces
echo "iface eth0 inet manual" >>/TARGET/etc/network/interfaces
echo "" >>/TARGET/etc/network/interfaces
echo "auto vmbr0" >>/TARGET/etc/network/interfaces
echo "iface vmbr0 inet static" >>/TARGET/etc/network/interfaces
echo "	address  $IPADDRESS" >>/TARGET/etc/network/interfaces
echo "	netmask  $IPNETMASK" >>/TARGET/etc/network/interfaces
echo "	gateway  $IPGATEWAY" >>/TARGET/etc/network/interfaces
echo "	bridge_ports eth0" >>/TARGET/etc/network/interfaces
echo "	bridge_stp off" >>/TARGET/etc/network/interfaces
echo "	bridge_fd 0" >>/TARGET/etc/network/interfaces

#Creazione di /etc/hosts
echo "#" >/TARGET/etc/hosts
echo "# created by fabrica-installer" >>/TARGET/etc/hosts
echo "#" >>/TARGET/etc/hosts
echo "127.0.0.1 localhost.localdomain localhost" >>/TARGET/etc/hosts
echo "$IPADDRESS $TARGETHOSTNAME.$TARGETDOMAIN $TARGETHOSTNAME pvelocal" >>/TARGET/etc/hosts
echo "" >>/TARGET/etc/hosts
echo "# The following lines are desirable for IPv6 capable hosts" >>/TARGET/etc/hosts
echo "" >>/TARGET/etc/hosts
echo "::1     ip6-localhost ip6-loopback" >>/TARGET/etc/hosts
echo "fe00::0 ip6-localnet" >>/TARGET/etc/hosts
echo "ff00::0 ip6-mcastprefix" >>/TARGET/etc/hosts
echo "ff02::1 ip6-allnodes" >>/TARGET/etc/hosts
echo "ff02::2 ip6-allrouters" >>/TARGET/etc/hosts
echo "ff02::3 ip6-allhosts" >>/TARGET/etc/hosts

#Creazione di /etc/resolv.conf
#touch /TARGET/etc/resolv.conf
echo "#" >TARGET/etc/resolv.conf
echo "# created by fabrica-installer" >>/TARGET/etc/resolv.conf
echo "#" >>/TARGET/etc/resolv.conf
echo "domain $TARGETDPMAIN" >>/TARGET/etc/resolv.conf
echo "nameserver $TARGETDNS" >>/TARGET/etc/resolv.conf
echo "nameserver 8.8.8.8" >>/TARGET/etc/resolv.conf
echo "nameserver 8.8.4.4" >>/TARGET/etc/resolv.conf



progressbar "Creazione di tempinstallerscript\n" &
cat > /TARGET/bin/tempinstallerscript <<FOO
#!/bin/bash
echo -e "$TARGETROOTPASS\n$TARGETROOTPASS\n" | passwd root
userdel -f -r $LIVE_USERNAME
sed -i '/$LIVE_USERNAME/d' /etc/sudoers
groupadd -g 1000 $TARGETUSER
useradd -u 1000 -g 1000 -c "$TARGETUSERFULLNAME,,," -G $DEFAULTGROUPS -s /bin/bash -m $TARGETUSER
echo -e "$TARGETPASS\n$TARGETPASS\n" | passwd $TARGETUSER
dpkg-divert --remove --rename --quiet /usr/lib/update-notifier/apt-check
dpkg-divert --remove --rename --quiet /usr/sbin/update-initramfs
dpkg-divert --remove --rename --quiet /usr/sbin/anacron
update-initramfs -t -c -k $(/bin/uname -r)
shadowconfig on
FOO
progressbarkill

progressbar "Avvio di tempinstallerscript per aggiornamento di initramfs.\n" &
chmod 755 /TARGET/bin/tempinstallerscript
chroot /TARGET /bin/tempinstallerscript
#rm /TARGET/bin/tempinstallerscript
progressbarkill


#
# Setup di grub
#
progressbar "Setup di grub...\n" &
echo "Installing and setting up grub."
echo ""
echo "chroot /TARGET grub-install /dev/$PARTDRIVE"
chroot /TARGET grub-install /dev/$PARTDRIVE
echo "chroot /TARGET update-grub"
chroot /TARGET update-grub
progressbarkill

#
# Setup di openssh-server
#
progressbar "Setup di openssh-server...\n" &
echo "Setup di openssh-server...."
chroot /TARGET dpkg-reconfigure openssh-server
progressbarkill

#
# Smonto /TARGET
#
progressbar "Smonto la partizione /TARGET...\n" &
sleep 1
umount /TARGET/proc
sleep 1
umount /TARGET/dev
sleep 1
umount /TARGET/sys
sleep 1
umount /TARGET/boot
sleep 1
umount /TARGET/var/lib/vz
sleep 1
umount /TARGET
sleep 1
progressbarkill

# Co sarebbero da smontare...
#/dev/loop0 on /lib/live/mount/rootfs/filesystem.squashfs
#tmpfs on /lib/live/mount/overlay type tmpfs
kindMessage "Provo a smontare /lib/live/mount/rootfs/filesystem.squashfs "
umont /lib/live/mount/rootfs/filesystem.squashfs

kindMessage "Provo a smontare /lib/live/mount/overlay "
umount /lib/live/mount/overlay



#
# Concludo
#
kindMessage "L\'installazione è stata completata.

Dovresti avere la tua Fabrica configurata e pronta all\'uso, altrimenti, puoi sempre collaborare a migliorare lo script!

L\'autore

sito: http://www.piojoris15.com
email: Piero Proietti piero.proietti@gmail.com"
if [ $? != 0 ]; then
	exit 0
else
	reboot
fi
